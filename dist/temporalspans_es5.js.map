{"version":3,"sources":["../lib/temporalspans.js"],"names":["temporalspans","params","valeqf","a","b","id","val","ts","temporalstate","on","name","emit","_ts","_ids","_valeqf","Object","keys","map","k","sort","cmp","span","sd","state_detail","from","to","timestamp","add_change","tst_val","remove_change","var_list","var_name","remove_var","ts_val","state","undefined","vn","when","var_names","i","length","ts_sd","in_span","current","next","to_next_change","next_to","new_span","prev_change","prev","end_change","next_change","real_span","modified","event_emitter"],"mappings":"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","file":"temporalspans_es5.js","sourcesContent":["import temporalstate from 'temporalstate';\nimport event_emitter from 'events';\nimport uuid from 'uuid';\n\n\nclass temporalspans extends event_emitter {\n\n    constructor (params = {}) {\n\n        super();\n\n        let valeqf = function (a, b) {\n            if (a === null && b === null)\n                return true;\n            if (a === null || b === null)\n                return false;\n            return a.id === b.id && a.val === b.val;\n        };\n\n        if (params.valeqf)\n            valeqf = function (a, b) {\n                if (a === null && b === null)\n                    return true;\n                if (a === null || b === null)\n                    return false;\n                return a.id === b.id && params.valeqf(a.val, b.val);\n            };\n\n        let ts = new temporalstate({\n            'valeqf': valeqf\n        });\n\n        ts.on('new_var', (name) => {\n            this.emit('new_var', name);\n        }).on('rm_var', (name) => {\n            this.emit('rm_var', name);\n        });\n\n        this._ts     = ts;\n        this._ids    = {};\n        this._valeqf = valeqf;\n\n    }\n\n    id_lookup (id) {\n\n        return this._ids[id];\n\n    }\n\n    list () {\n\n        return Object.keys(this._ids)\n            .map((k) => this._ids[k])\n            .sort(temporalspans.cmp);\n\n    }\n\n    add (span) {\n\n        let ts = this._ts;\n\n        let sd = ts.state_detail(span.from, span.name);\n        if (sd.from === null || sd.from.val === null) {\n            if (sd.to === null || sd.to.timestamp > span.to) {\n                span.id = uuid();\n                ts.add_change({'timestamp': span.from, 'name': span.name, 'val': {'id': span.id, 'val': span.val}});\n                ts.add_change({'timestamp': span.to, 'name': span.name, 'val': null});\n                this._ids[span.id] = span;\n                this.emit('add', span);\n                return span;\n            } else if (sd.to.timestamp === span.to) {\n                span.id = uuid();\n                ts.add_change({'timestamp': span.from, 'name': span.name, 'val': {'id': span.id, 'val': span.val}});\n                this._ids[span.id] = span;\n                this.emit('add', span);\n                return span;\n            }\n        }\n\n        return null;\n\n    }\n\n    remove (span) {\n\n        let ts = this._ts;\n\n        let sd = ts.state_detail(span.from, span.name);\n        let tst_val = {'id': span.id, 'val': span.val};\n\n        if (sd.from.timestamp === span.from && sd.from.val.id === tst_val.id && sd.to.timestamp === span.to) {\n            if  (sd.to.val === null) {\n                ts.remove_change({'timestamp': span.from, 'name': span.name, 'val': tst_val});\n                ts.remove_change({'timestamp': span.to, 'name': span.name, 'val': null});\n                delete this._ids[span.id];\n                this.emit('remove', span);\n            } else {\n                ts.remove_change({'timestamp': span.from, 'name': span.name, 'val': tst_val});\n                delete this._ids[span.id];\n                this.emit('remove', span);\n            }\n            return true;\n        }\n\n        return false;\n\n    }\n\n    vars () {\n\n        return this._ts.var_list();\n\n    }\n\n    remove_var (var_name) {\n\n        return this._ts.remove_var(var_name);\n\n    }\n\n    state (ts, name) {\n\n        let ts_val = this._ts.state(ts, name);\n\n        if (name === undefined) {\n            for (let vn in ts_val)\n                ts_val[vn] = ts_val[vn].val;\n        } else if (ts_val !== null) {\n            ts_val = ts_val.val;\n        }\n\n        return ts_val;\n\n    }\n\n    state_detail (when, name) {\n\n        let ts = this._ts;\n\n        let sd = {};\n        if (name === undefined) {\n            let var_names = ts.var_list();\n            for (let i = 0; i < var_names.length; i++) {\n                let vn = var_names[i];\n                let ts_sd = ts.state_detail(when, vn);\n                let from = ts_sd.from;\n                let to = ts_sd.to;\n                let in_span = from !== null && from.val !== null && from.val.val !== null;\n                let current = in_span\n                    ? {'from': from.timestamp, 'to': to.timestamp, 'name': vn, 'val': from.val.val, 'id': from.val.id}\n                    : null;\n                let next = null;\n                if (!in_span && to !== null) {\n                    let to_next_change = ts.next(to, vn);\n                    let next_to = to_next_change.timestamp;\n                    next = {'from': to.timestamp, 'to': next_to, vn, 'name': vn, 'val': to.val.val, 'id': to.val.id};\n                }\n                sd[vn] = {\n                    'current': current,\n                    'next':    next,\n                };\n            }\n        } else {\n            let ts_sd = ts.state_detail(when, name);\n            let from = ts_sd.from;\n            let to = ts_sd.to;\n            let in_span = from !== null && from.val !== null && from.val.val !== null;\n            let current = in_span\n                ? {'from': from.timestamp, 'to': to.timestamp, 'name': name, 'val': from.val.val, 'id': from.val.id}\n                : null;\n            let next = null;\n            if (!in_span && to !== null) {\n                let to_next_change = ts.next(to, name);\n                let next_to = to_next_change.timestamp;\n                next = {'from': to.timestamp, 'to': next_to, 'name': name, 'val': to.val.val, 'id': to.val.id};\n            }\n            sd.current = current;\n            sd.next    = next;\n        }\n\n        return sd;\n\n    }\n\n    modify (span, new_span) {\n\n        let ts = this._ts;\n\n        if (span.name !== new_span.name)\n            return null;\n        if (span.id !== new_span.id)\n            return null;\n        if (new_span.from >= new_span.to)\n            return null;\n\n        let prev_change = ts.prev(\n            {'timestamp': span.from, 'name': span.name, val: {'id': span.id, 'val': span.val}},\n            span.name\n        );\n        if (new_span.from < span.from && prev_change !== null && new_span.from < prev_change.timestamp)\n            return null;\n\n        let end_change = ts.next(\n            {'timestamp': span.from, 'name': span.name, val: {'id': span.id, 'val': span.val}},\n            span.name\n        );\n        let next_change = end_change === null\n            ? null\n            : ts.next(end_change, span.name);\n        if (new_span.to > span.to && next_change !== null && new_span.to > next_change.timestamp)\n            return null;\n\n        let real_span = this._ids[span.id];\n\n        let modified = false;\n        if (new_span.from !== span.from) {\n            if (new_span.from > span.from)\n                ts.add_change({'timestamp': span.from, 'name': span.name, 'val': null});\n            ts.add_change({'timestamp': new_span.from, 'name': span.name, 'val': {'id': span.id, 'val': span.val}});\n            real_span.from = new_span.from;\n            modified = true;\n        }\n        if (new_span.to !== span.to) {\n            if (new_span.to > span.to)\n                ts.add_change({'timestamp': span.to, 'name': span.name, 'val': {'id': span.id, 'val': span.val}});\n            if (next_change === null || new_span.to < next_change.timestamp)\n                ts.add_change({'timestamp': new_span.to, 'name': span.name, 'val': null});\n            real_span.to = new_span.to;\n            modified = true;\n        }\n        if (!this._valeqf({'id': span.id, 'val': span.val}, {'id': span.id, 'val': new_span.val})) {\n            ts.add_change({'timestamp': new_span.from, 'name': span.name, 'val': {'id': span.id, 'val': new_span.val}});\n            real_span.val = new_span.val;\n            modified = true;\n        }\n\n        if (modified)\n            this.emit('modify', span, new_span);\n\n        return new_span;\n\n    }\n\n    static cmp (a, b) {\n\n        return a.from < b.from ? -1\n            : a.from > b.from ? 1\n            : a.to < b.to ? -1\n            : a.to > b.to ? 1\n            : a.name < b.name ? -1\n            : a.name > b.name ? 1\n            : 0;\n\n    }\n\n}\n\n\nexport default temporalspans;\n"]}